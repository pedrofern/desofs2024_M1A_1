{
	"info": {
		"_postman_id": "1d43926a-9449-4931-96de-487e536cb89a",
		"name": "EletricGo_BackEnd",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24024866"
	},
	"item": [
		{
			"name": "Autentication",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authenticates and sets token\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.environment.set(\"token\", responseJson.access_token);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"fleet@isep.pt\",\r\n    \"password\": \"Fleet@123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/user/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"admin@isep.pt\",\r\n    \"password\": \"Admin@123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/user/logout",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"user",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"operador\",\r\n    \"lastName\": \"ultimo nome op tres\",\r\n    \"email\": \"operator3@isep.pt\",\r\n    \"password\": \"Operator3@123\",\r\n    \"phoneNumber\": \"+3519123456789\",\r\n    \"role\": \"OPERATOR\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/user/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"user",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign new role",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"role\": \"LOGISTICS_MANAGER\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/user/:id/assign-role",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"user",
								":id",
								"assign-role"
							],
							"variable": [
								{
									"key": "id",
									"value": "operator2@isep.pt"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Truck",
			"item": [
				{
					"name": "Create Truck with Valid Input",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Truck created\", function() {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"truckId\": 1,\n    \"tare\": 5000.0,\n    \"loadCapacity\": 20000.0,\n    \"active\": true,\n    \"battery\": {\n        \"batteryId\": 1,\n        \"maximumBattery\": 100.0,\n        \"autonomy\": 2000.0,\n        \"chargingTime\": 30.0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/trucks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"trucks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Truck with Negative Tare",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validation error\", function() {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"truckId\": 1,\n    \"tare\": -5000.0,\n    \"loadCapacity\": 20000.0,\n    \"active\": true,\n    \"battery\": {\n        \"batteryId\": 1,\n        \"maximumBattery\": 100.0,\n        \"autonomy\": 2000.0,\n        \"chargingTime\": 30.0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/trucks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"trucks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Truck with Null Battery",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validation error\", function() {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"truckId\": 1,\n    \"tare\": 5000.0,\n    \"loadCapacity\": 20000.0,\n    \"active\": true,\n    \"battery\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/trucks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"trucks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Truck with Missing Truck ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validation error\", function() {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tare\": 5000.0,\n    \"loadCapacity\": 20000.0,\n    \"active\": true,\n    \"battery\": {\n        \"batteryId\": 1,\n        \"maximumBattery\": 100.0,\n        \"autonomy\": 2000.0,\n        \"chargingTime\": 30.0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/trucks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"trucks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Truck with Valid Input Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Truck created\", function() {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/trucks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"trucks"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delivery",
			"item": [
				{
					"name": "Get all deliveries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Only authorized access to all deliveries\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.json;",
									"    let jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse).to.be.an('array');",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/deliveries",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"deliveries"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Delivery by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Fetch delivery by ID with proper authorization\", function () {",
									"    pm.response.to.have.status(200);",
									"    let jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.id).to.eql(pm.variables.get(\"deliveryId\"));",
									"});",
									"",
									"pm.test(\"Prevent unauthorized access to delivery details\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/deliveries/100",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"deliveries",
								"100"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Delivery",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create delivery with valid input\", function () {",
									"    pm.response.to.have.status(201);",
									"    let jsonResponse = pm.response.json();",
									"    pm.environment.set(\"deliveryToDelete\", response.json.deliveryId);",
									"    pm.expect(jsonResponse.deliveryDate).to.eql(\"2024-05-19\");",
									"    pm.expect(jsonResponse.weight).to.eql(1234.0);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"deliveryDate\": \"2024-05-19\",\n    \"weight\": 1234.0,\n    \"warehouseId\": \"1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/deliveries",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"deliveries"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Delivery",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Update delivery details\", function () {",
									"    pm.response.to.have.status(200);",
									"    let jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.weight).to.eql(9999.0);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"deliveryDate\": \"2024-05-19\",\n    \"weight\": 9999.0,\n    \"warehouseId\": \"1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/deliveries/{{deliveryToDelete}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"deliveries",
								"{{deliveryToDelete}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Delivery",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete delivery\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/deliveries/{{deliveryToDelete}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"deliveries",
								"{{deliveryToDelete}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Delivery Plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Retrieve delivery plan\", function () {",
									"    pm.response.to.have.status(200);",
									"    let jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.deliveryId).to.eql(\"100\");",
									"    pm.expect(jsonResponse.warehouseId).to.eql(\"1\");",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/deliveries/delivery-plan?deliveryId=100&warehouseId=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"deliveries",
								"delivery-plan"
							],
							"query": [
								{
									"key": "deliveryId",
									"value": "100"
								},
								{
									"key": "warehouseId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Delivery Plan PDF",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Generate and retrieve delivery plan PDF\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.header(\"Content-Type\", \"application/pdf\");",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/deliveries/delivery-plan/pdf?deliveryId=100&warehouseId=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"deliveries",
								"delivery-plan",
								"pdf"
							],
							"query": [
								{
									"key": "deliveryId",
									"value": "100"
								},
								{
									"key": "warehouseId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"var token = pm.environment.get(\"token\");",
							"if (token) {",
							"    pm.request.headers.add({",
							"        key: 'Authorization',",
							"        value: 'Bearer ' + token",
							"    });",
							"} else {",
							"    console.log(\"Token not found, check login test.\");",
							"}"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "",
			"type": "string"
		}
	]
}